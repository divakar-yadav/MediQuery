{
    "title": "DeepSurvNet: deep survival convolutional network for brain cancer survival rate classification based on histopathological images",
    "abstract": "Histopathological whole slide images of haematoxylin and eosin (H&E)-stained biopsies contain valuable information with\nrelation to cancer disease and its clinical outcomes. Still, there are no highly accurate automated methods to correlate\nhistolopathological images with brain cancer patients\u2019 survival, which can help in scheduling patients therapeutic treatment\nand allocate time for preclinical studies to guide personalized treatments. We now propose a new classifier, namely,\nDeepSurvNet powered by deep convolutional neural networks, to accurately classify in 4 classes brain cancer patients\u2019 survival\nrate based on histopathological images (class I, 0\u20136 months; class II, 6\u201312 months; class III, 12\u201324 months; and class IV,\n>24 months survival after diagnosis). After training and testing of DeepSurvNet model on a public brain cancer dataset, The\nCancer Genome Atlas, we have generalized it using independent testing on unseen samples. Using DeepSurvNet, we obtained\nprecisions of 0.99 and 0.8 in the testing phases on the mentioned datasets, respectively, which shows DeepSurvNet is a reliable\nclassifier for brain cancer patients\u2019 survival rate classification based on histopathological images. Finally, analysis of the fre-\nquency of mutations revealed differences in terms of frequency and type of genes associated to each class, supporting the idea of a\ndifferent genetic fingerprint associated to patient survival. We conclude that DeepSurvNet constitutes a new artificial intelligence\ntool to assess the survival rate in brain cancer.\nKeywords Deeplearning .Survivalrate .Braincancer .Histopathologicalimages .Classification .Convolutionalneuralnetworks\n1",
    "authors": [
        "Amin Zadeh Shirazi",
        "Eric Fornaciari",
        "Narjes Sadat Bagherian",
        "Lisa M. Ebert",
        "Barbara Koszyca",
        "Guillermo A. Gomez"
    ],
    "published_year": "2020",
    "description": "Mr. Amin Zadeh Shirazi\n              has a BScD in Computer Eng. and a MS in Artificial Intelligence. He is currently a PhD candidate at UniSA where he focuses on machine learning applications in medicine and biology.\nMr. Eric Fornaciari\n              has a B.S. in Mathematics of Computation and B.A. in Linguistics and Computer Science from the University of California, Los Angeles, and currently works as a data engineer in Los Angeles.\nDr. Narjes Sadat Bagherian\n              received her MD degree from Mashhad University of Medical Science and is a specialist in opthalmology, with a fellowship in cornea. She has multiple experiences in cornea, refractive and glaucoma surgery.\nDr Lisa Ebert\n              (B.Sc. (Hons), PhD) is a clinically oriented cancer research scientist, with a particular interest in immunology and cancer immunotherapy.\nDr Barbara Koszyca\n              is a fellow of the Royal College of Pathologists of Australasia since 1996, and she works in both neuropathology and general surgical pathology at the Royal Adelaide Hospital.\nDr. Guillermo Gomez\n              received his PhD in Argentina, where he gain experience in programing and quantitative image analysis. His laboratory at the Centre for Cancer Biology (Adelaide, Australia) focuses on understanding the role of the tumour microenvironment on glioblastoma progression.\nElectronic supplementary material\n      \n        \nSupplementary Table 1TCGA patient ID, brain tumour type and survival. (XLSX 25\u00a0kb)\nIntroduction\n      Brain cancer patient classification is mainly based on histopathological images that can accurately identify the type of cancer as well as genetic tests [1, 2]. However, recent single cell RNA seq experiments performed in GBM biopsies [3\u20138] have challenged these models, pointing out that the reliability of these methods and its use in personalized medicine strongly depends on how much we know on these different type of cancers (i.e. cancer cell subtypes within a tumour) and how many therapies for their individual treatment we have available and whether these target all or none of such cancer cell populations [9]. Thus and as we certainly are still progressing on the molecular determinants that contribute to the aggressiveness of glioblastoma, the current brain cancer classification methods (either based on histological and/or genetic approaches) so far have shown not being sufficient to provided a complete picture on how this can be used to predict (i) survival, (ii) response to treatment and (iii) the development of more personalized treatments [10], which is clearly evident by the following: (i) the lack of development of new treatments for brain cancer patients, in particular, those patients affected by grade IV glioma [10]; (ii) the lack of improvement in brain cancer treatments and patients outcomes (i.e. survival) in the last 30\u00a0years [11]; and (iii) the lack of personalized treatments in the clinic, where most oncologists subject patients to the Stupp protocol and knowledge-based on IDH gene mutations and MGMT methylation [12].\n      Thus, we feel that in addition to the classification of brain tumours that have been done so far, it is also equally important to stratify brain cancer patients based on their survival characteristics and which will permit us to clinicians to tailor both the timing and the type of treatments to patients [12, 13]. This will, for example, be helpful or avoid overtreating those patients with more stable disease. Moreover, classification of brain tumours as a function of brain cancer survival will help us to reveal key characteristics that make these tumours very aggressive and for those patients that present long survival, what are the molecular signatures that contribute to it [13].\n      Thus, survival rate analysis has become essential for clinicians to select the best treatment methods based on the patient\u2019s clinical data [14, 15]; and survival predictor models have been developed in oncology to investigate the relationship between information obtained at the time of diagnosis and the overall patient\u2019s survival [16]. This has been further facilitated by the recent access to large datasets of digital images, e.g. The Cancer Genome Atlas (TCGA), at the moment of diagnosis, including those from computed tomography (CT), magnetic resonance imaging (MRI) and whole slide pathological imaging (WSI), which have allowed researchers to investigate patient\u2019s survival based on the information contained in these images [17\u201320]. For example, Tomczak et al. [21] collected >\u20092000 lung cancer WSIs, and others established a relationship between the information stored in the pathological images and survival rates [22, 23].\n      Thus, a different group of models for prediction of the patient\u2019s survival based on the histopathological information collected at the moment of diagnosis have emerged. One group correspond to accurate prediction of the patient\u2019s survival that is related to the traditional hazard models and which are based on the Cox model [24] and its derivations [25, 26]. These consider a linear combination of covariates to predict the risk of the patient\u2019s death with nonlinear functions related to the risk [27]. Another group is based on artificial intelligence and deep learning, on which deep convolutional neural networks (DCNN) are used for the analysis of biomedical imaging and applied to recognition, classification and prediction tasks [28\u201331]. Numerous examples that use DCNNs have been reported recently to predict the survival rate based on pathological images including Katzman et al. [32] who put forwards for the first time deep fully connected network, namely, DeepSurv, to predict survival rate based on structured clinical data (non-images data) and Zhu et al. [27] who used a modified DCNN, namely, DeepConvSurv, on the unstructured data (867 lung cancer WSIs pathological images) to predict the survival rate. In particular, they changed the DCNN loss function in their model to negative partial log likelihood, and as a result, the output of their network measured the risk value for each patient. In their work, they reported a concordance index (c-index) of 0.63 as their model evaluator. Zhu et al. [33] applied a WSI-based model (viz. WSISA) to predict survival state in lung cancer as well as in glioblastoma (c-index 0.7, 0.64 for lung cancer and glioblastoma, respectively), although in a limited manner as (i) WSIs from TCGA with 0.5-\u03bcm/pixel (p) resolution were downloaded, and patches of 512 pixels\u2009\u00d7\u2009512 pixels (512\u2009\u00d7\u2009512) size were extracted haphazardly, implying that 54% of the publicly available data was outliers in their analysis, and (ii) high-level semantic information could not be detected in their model. Tang et al. [34] also used DCNN-based model (viz. CapSurv) to predict survival rate in lung and a specific type of brain cancer (glioblastoma) considering patches of 256\u2009\u00d7\u2009256 extracted from WSIs from TCGA and applied a new loss function, namely, survival loss, to improve the accuracy (c-index 0.67) of the predictive model.\n      In addition to accurate prediction of the patient\u2019s survival, supervised machine learning\u2013based algorithms are also used for classification [35, 36] where input values (e.g. an image associated to clinical record) are assigned to an output class (e.g. survival within a given time period after diagnosis). Classifiers offer the possibility of predicting with high accuracy the class to which a group of patients belong (e.g. time period after diagnosis) compared to accurate prediction of the patient\u2019s survival methods that are less precise and works inefficiently. As a novel example, Kolachalama et al. [37] utilized DCNN to classify the survival rate of three types of kidney cancer based on WSIs. In their model, the inputs were WSIs without any extracted patches, a computationally very demanding task, and the outputs were three classes of survival rates including 1 year, 3 years and 5 years whose results (area under curve as a classifier evaluator metric) achieve 0.878, 0.875 and 0.904, respectively.\n      In this work, we use DCNN for classification of brain cancer survival using whole slide histopathological images obtained from haematoxylin and eosin(H&E )-stained biopsy tissue sections, since no models were reported previously for classification of survival rates of brain cancer patients (see [38] for a comprehensive review on brain cancer classification using deep learning methods and MRI imaging). Moreover and although research is progressing on the molecular determinants that contribute to the development and growth of brain tumours, including glioblastoma, the most aggressive form, current classification approaches (either based on histological and/or genetic tests) do not directly focus on the survival of patients [1, 2, 10] and have not yet provided a complete picture on how \u201cbrain cancer type classification\u201d can be used to predict (i) survival and (ii) response to treatment and (iii) help the development of more personalized treatments.\u201d In order to address this problem of brain cancer classification based on survival, we put forwards deep survival convolutional network (DeepSurvNet) as a novel classifier approach based on DCNN. Like the other models, we used patches derived from WSIs as inputs in our model, and we trained and tested our model based on WSI images available from TCGA. In addition, we were able to generalize the results of our model by further applying it to a completely independent dataset of H&E images derived from tumour biopsies collected locally by SA Pathology, the South Australian state pathology service. Thus, DeepSurvNet allowed us for the first time to (1) accurately (>\u200999%) classify brain cancer survival rate directly from the WSIs and (2) validate our TCGA-trained model in an independent and local cohort of patients. The experimental results illustrate that DeepSurvNet model is a distinguished classifier and open a new horizon in the field of survival analysis.\nMethods\n      \n        Construction, training and testing of DeepSurvNet\n        Figure 1 presents the steps (a to h) involved in the construction, training and testing of DeepSurvNet, which are described below.Fig.\u00a01Workflow for construction, training and testing of DeepSurvNet using H&E-stained histopathological images of brain tumours available at TCGA (https://portal.gdc.cancer.gov/projects). The accuracy of all the classifier models is dependent on the image preprocessing steps b to d on this\n        \n          Datasets used for training, testing and validation of deep learning classifiers (Fig.\u00a01a)\n          We considered two different datasets for the classification of survival rates in patients who suffered from different types of brain cancer including glioblastoma multiform, mixed glioma, oligodendroglioma and astrocytoma. The first dataset is derived from 490 brain cancer patients and is publicly available from TCGA [39] and was used to train and test all the classifier models of survival rates. It is important to mention that within this dataset, slides \u2013 and therefore WSI \u2013 for each patient contain several tissue sections of the same biopsy, and all of these were used to train and test the classifiers. The second dataset was derived from 9 glioblastoma patients who underwent surgical tumour resection within the South Australian public hospital system. Tumour biopsy specimens were accessed from archival material stored at SA Pathology (the state pathology service), and survival time was calculated based on electronic medical records. Formalin-fixed paraffin-embedded biopsy tissues were sectioned and stained with H&E according to standard protocols at SA Pathology and imaged at 0.5-\u03bcm/pixel resolution using a Zeiss AxioImager.M2 microscope equipped with an EC Plan-Neofluar 40x/0.75\u00a0M27 Objective and an AxioCam Mrc camera. We used this dataset for an independent test and to monitor the efficiency of our model (i.e. this data was not used for training of the model, for which only TCGA datasets were used).\n        \n        \n          Patients\u2019 database creation: removing outliers and extraction of tumour regions of interest (ROIs) from WSIs (Fig. 1b)\n          937 WSIs from 490 brain cancer patients were downloaded from TCGA. These were visually explored, and those WSIs that are useless for further analysis because they are corrupted, present marker annotations that cannot be removed, are of low-resolution or lack of clinical information (time of decease after diagnosis) were removed, which left 654 WSI from 445 cases available for further analysis. Guided by the pathologist, we further inspect the data for optimum extraction of several tumour ROIs from each WSI. The total number of extracted ROIs was 849 from the 445 cases. We used this result to create a curated database containing all the patients\u2019 clinical output information including the patients\u2019 ID, mutated genes, and time between brain cancer diagnosis and disease. This database is directly related to all the extracted ROIs used in our work and is available from the authors upon request.\n        \n        \n          Definition of different classes for survival (Fig. 1c)\n          For classification, we have considered 4 classes. These classes are related to the patients\u2019 history of their time between brain cancer diagnosis to death which was extracted from patients clinical history available from TCGA. Thus, in classes I, II, III and IV, there are respectively 217 ROIs (related to patients with survival time after diagnosis between 0 and 6\u00a0months), 210 ROIs (related to patients with survival time after diagnosis between 6 and12\u00a0months), 277 ROIs (related to patients with survival time after diagnosis between 12 and 24\u00a0months) and 145 ROIs (related to patients with survival time after diagnosis greater than 24\u00a0months). Thus, the number of classes and ROIs in each one is sufficiently large for training the DCNN classifiers which are known to be extremely data hungry throughout the training phase [40].\n        \n        \n          Patch extraction from ROIs and patch standardization (Fig. 1d)\n          ROIs allocated to each class are large in size, and processing them directly is computationally demanding. Thus, for training and testing purposes, we have extracted ROI subregions or \u201cpatches\u201d of different sizes 256\u2009\u00d7\u2009256 (218,760 patches), 512\u2009\u00d7\u2009512 (38,963 patches) and 1024\u2009\u00d7\u20091024 (8657 patches) and compared them to know which can detect more features from the ROIs. For supervised machine learning tasks (e.g. classification), each patch is allocated to a class with a specific label, which results in 4 labels as outputs, and each label is related to each class. Table 1 shows a summary of the number of extracted patches with different sizes for each class.Table 1Patch extraction from ROIs for each classNo. of patientsNo. of ROIsNo. of patches (256\u2009\u00d7\u2009256)No. of patches (512\u2009\u00d7\u2009512)No. of patches (1024\u2009\u00d7\u20091024)Class I9521749,70587781921Class II9621053,42894802099Class III13327774,32613,2873004Class IV12114541,30174181633Total445849218,76038,9638657\n          Finally, as TCGA derived images present variable levels of colour intensities, we standardize their intensities by applying the following formula to each pixel:1\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ {P}^{\\hbox{'}}=\\frac{P-\\mu }{\\sigma } $$\\end{document}P'=P\u2212\u03bc\u03c3where P\u2032 and P are standardized and original patches, respectively. Also, \u03bc\u00a0and \u03c3 are the average and standard deviation of all values in the original image patch.\n        \n        \n          Training, validating and testing datasets and DCNN-based classifiers (Fig. 1e, f)\n          For each specific patch size extracted from TCGA dataset, we have divided all the patches into three different cohorts including training (80%), validating (18%) and testing (2%). An example of an early CNN structure can be seen in Fig.\u00a02. The early basic architectures popularized by AlexNet [41] loosely follow a pattern of alternating between convolutional layers (Conv Layer) and pooling layers (Pool Layer). The intention is to \u201clearn\u201d features from input layers via convolutional layers and reduce the spatial complexity via pooling layers. Subsequent iterations of these operations distil a set of features that are enrolled into a fully connected (FC) layer which are computed to output classes.Fig.\u00a02Simple CNN structure with fully connected layers\n          In more modern architectures such as MobileNetV2 [42], FC layers are largely outdated in favour of 1\u2009\u00d7\u20091 convolutions. More performant patterns have also been developed such as residual layers which utilize skip connections introduced in ResNet50 [43].\n        \n        \n          Five DCNN-based classifiers for brain cancer survival rate classification (Fig.\u00a01g)\n          In order to classify different classes of survival rates based on different sizes of patches, we have considered the most popular DCNN classifiers in image recognition task including VGG19 [44], GoogleNet [45], ResNet50 [43], InceptionV3 [46] and MobileNetV2 [42]. We compared all the results derived from each of these models, and the best-performing model was then used as the engine for DeepSurvNet.\n          \n            VGG19\n            In 2014, Visual Geometry Group (VGG) in the Oxford University presented A DCNN classifier model named VGG [44] in the ILSVRC [47] challenge and won the image classification tasks using the VGG model. There are several architectures of VGG with different layers, two of which are very popular. The first one is a 16-layer (VGG16), and the other is a 19-layer (VGG19). We use VGG19 as a classifier for survival rate classification task in this study.\n          \n          \n            GoogleNet\n            In 2014, Szegedy et al. [45] from Google introduced a new conception, namely, Inception, in their article and called their model GoogleNet. In this 22-layer deep network, they have applied filters with different sizes 1\u2009\u00d7\u20091, 3\u2009\u00d7\u20093 and 5\u2009\u00d7\u20095 in the Inception modules. The aim of using such multiple convolutions in the Inception modules would be to feature extraction in different levels. After stacking the outputs of these filters along the channels, they are ready for further layers.\n          \n          \n            ResNet50\n            In 2015, He et al. from Microsoft introduced the ResNet architecture and demonstrated that using the residual modules, we can train very deep convolutional networks with standard stochastic gradient descent (SGD) method [43]. Among all different kinds of ResNet models, the ResNet50 is very popular since it has simpler structure than the other forms, a reason why we use it in this study.\n          \n          \n            InceptionV3\n            As mentioned earlier, GoogleNet introduced the Inception architecture or Inception V1. Afterwards, Inception module was purified in various ways and other architectures are introduced by Google as Inception vN where N is the Inception version. The Inception V3 [46] architecture adds new features to the inception module to increase the accuracy of the ILSVRC classification task.\n          \n          \n            MobileNetV2\n            Another successful approach of DCNN-based classifiers is MobileNetV2 [42] introduced by Sandler et al. from Google in 2018. Although MobileNetV2 is a new idea elicited from MobileNetV1 [48], i.e. using efficient building blocks through depth wise separable convolution, there are two new characteristics to the V2 architecture. The first feature is linear bottlenecks between the layers, and the second is shortcut connections between the bottlenecks. Since their classifier has good functionality on benchmarks like ILSVRC, we have included it as a survival rate classifier for this study.\n          \n          \n            DeepSurvNet classifier model (Fig.\u00a01h)\n            After the utilization of five classifiers introduced in the previous part on the different patch sizes, the best classifier model of survival rate is selected. It should be noted since we have five classifiers and three different sizes of patches, and the number of models applied was 15 in total. The best classifier with the highest accuracy and the lowest loss among all the 15 classifiers is called DeepSurvNet.\n          \n        \n      \n      \n        Evaluation criteria\n        Several metrics like confusion matrix [49]; the combination of precision, recall and F-score [50]; and the area under the ROC curve (AUC) [51] were used for performance evaluation of our classifiers.\n        \n          Confusion matrix\n          The confusion matrix summarizes a classifier success in the prediction of examples belonging to different classes based on true positives (TP), true negatives (TN), false negatives (FN) and false positive (FP) values. This table is used to calculate the other performance metrics, i.e. precision, recall and Matthews correlation coefficient (MCC).\n        \n        \n          Precision, recall and F-score\n          Precision and recall are defined as follows:2\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\Pr ecision=\\frac{TP}{TP+ FP} $$\\end{document}Precision=TPTP+FP3\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\operatorname{Re} call=\\frac{TP}{TP+ FN} $$\\end{document}Recall=TPTP+FN\n          And F-score is the harmonic average of the precision and recall:4\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ F- Score=\\frac{2\\left(\\Pr ecision\\times \\operatorname{Re} call\\right)}{\\left(\\Pr ecision+\\operatorname{Re} call\\right)} $$\\end{document}F\u2212Score=2Precision\u00d7RecallPrecision+Recall\n          The MCC value is a correlation coefficient between the targets and predicted classifications:5\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ MCC=\\left( TP\\times TN\\right)-\\left( FP\\times FN\\right)/\\sqrt{\\left( TP+ FP\\right)\\left( TP+ FN\\right)\\left( TN+ FP\\right)\\left( TN+ FN\\right)} $$\\end{document}MCC=TP\u00d7TN\u2212FP\u00d7FN/TP+FPTP+FNTN+FPTN+FN\n          Precision, recall and F-score reach their best values at 1 and worst at 0. MCC of +\u20091 indicates a perfect prediction and \u2212\u20091 represents completely disagreement between target and prediction.\n        \n        \n          Area under the curve (AUC) and receiver operating characteristics (ROC)\n          ROC curves combine the true positive rate (TPR or sensitivity) and false positive rate (FPR or 1-specificity) to illustrate the classification performance. These two metrics are defined as follows:6\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ TPR=\\frac{TP}{TP+ FN} $$\\end{document}TPR=TPTP+FN7\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ FPR=\\frac{FP}{FP+ TN} $$\\end{document}FPR=FPFP+TN\n          A perfect classifier would achieve higher AUC, and AUC of 1 means the best classification.\nConstruction, training and testing of DeepSurvNet\n        Figure 1 presents the steps (a to h) involved in the construction, training and testing of DeepSurvNet, which are described below.Fig.\u00a01Workflow for construction, training and testing of DeepSurvNet using H&E-stained histopathological images of brain tumours available at TCGA (https://portal.gdc.cancer.gov/projects). The accuracy of all the classifier models is dependent on the image preprocessing steps b to d on this\n        \n          Datasets used for training, testing and validation of deep learning classifiers (Fig.\u00a01a)\n          We considered two different datasets for the classification of survival rates in patients who suffered from different types of brain cancer including glioblastoma multiform, mixed glioma, oligodendroglioma and astrocytoma. The first dataset is derived from 490 brain cancer patients and is publicly available from TCGA [39] and was used to train and test all the classifier models of survival rates. It is important to mention that within this dataset, slides \u2013 and therefore WSI \u2013 for each patient contain several tissue sections of the same biopsy, and all of these were used to train and test the classifiers. The second dataset was derived from 9 glioblastoma patients who underwent surgical tumour resection within the South Australian public hospital system. Tumour biopsy specimens were accessed from archival material stored at SA Pathology (the state pathology service), and survival time was calculated based on electronic medical records. Formalin-fixed paraffin-embedded biopsy tissues were sectioned and stained with H&E according to standard protocols at SA Pathology and imaged at 0.5-\u03bcm/pixel resolution using a Zeiss AxioImager.M2 microscope equipped with an EC Plan-Neofluar 40x/0.75\u00a0M27 Objective and an AxioCam Mrc camera. We used this dataset for an independent test and to monitor the efficiency of our model (i.e. this data was not used for training of the model, for which only TCGA datasets were used).\n        \n        \n          Patients\u2019 database creation: removing outliers and extraction of tumour regions of interest (ROIs) from WSIs (Fig. 1b)\n          937 WSIs from 490 brain cancer patients were downloaded from TCGA. These were visually explored, and those WSIs that are useless for further analysis because they are corrupted, present marker annotations that cannot be removed, are of low-resolution or lack of clinical information (time of decease after diagnosis) were removed, which left 654 WSI from 445 cases available for further analysis. Guided by the pathologist, we further inspect the data for optimum extraction of several tumour ROIs from each WSI. The total number of extracted ROIs was 849 from the 445 cases. We used this result to create a curated database containing all the patients\u2019 clinical output information including the patients\u2019 ID, mutated genes, and time between brain cancer diagnosis and disease. This database is directly related to all the extracted ROIs used in our work and is available from the authors upon request.\n        \n        \n          Definition of different classes for survival (Fig. 1c)\n          For classification, we have considered 4 classes. These classes are related to the patients\u2019 history of their time between brain cancer diagnosis to death which was extracted from patients clinical history available from TCGA. Thus, in classes I, II, III and IV, there are respectively 217 ROIs (related to patients with survival time after diagnosis between 0 and 6\u00a0months), 210 ROIs (related to patients with survival time after diagnosis between 6 and12\u00a0months), 277 ROIs (related to patients with survival time after diagnosis between 12 and 24\u00a0months) and 145 ROIs (related to patients with survival time after diagnosis greater than 24\u00a0months). Thus, the number of classes and ROIs in each one is sufficiently large for training the DCNN classifiers which are known to be extremely data hungry throughout the training phase [40].\n        \n        \n          Patch extraction from ROIs and patch standardization (Fig. 1d)\n          ROIs allocated to each class are large in size, and processing them directly is computationally demanding. Thus, for training and testing purposes, we have extracted ROI subregions or \u201cpatches\u201d of different sizes 256\u2009\u00d7\u2009256 (218,760 patches), 512\u2009\u00d7\u2009512 (38,963 patches) and 1024\u2009\u00d7\u20091024 (8657 patches) and compared them to know which can detect more features from the ROIs. For supervised machine learning tasks (e.g. classification), each patch is allocated to a class with a specific label, which results in 4 labels as outputs, and each label is related to each class. Table 1 shows a summary of the number of extracted patches with different sizes for each class.Table 1Patch extraction from ROIs for each classNo. of patientsNo. of ROIsNo. of patches (256\u2009\u00d7\u2009256)No. of patches (512\u2009\u00d7\u2009512)No. of patches (1024\u2009\u00d7\u20091024)Class I9521749,70587781921Class II9621053,42894802099Class III13327774,32613,2873004Class IV12114541,30174181633Total445849218,76038,9638657\n          Finally, as TCGA derived images present variable levels of colour intensities, we standardize their intensities by applying the following formula to each pixel:1\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ {P}^{\\hbox{'}}=\\frac{P-\\mu }{\\sigma } $$\\end{document}P'=P\u2212\u03bc\u03c3where P\u2032 and P are standardized and original patches, respectively. Also, \u03bc\u00a0and \u03c3 are the average and standard deviation of all values in the original image patch.\n        \n        \n          Training, validating and testing datasets and DCNN-based classifiers (Fig. 1e, f)\n          For each specific patch size extracted from TCGA dataset, we have divided all the patches into three different cohorts including training (80%), validating (18%) and testing (2%). An example of an early CNN structure can be seen in Fig.\u00a02. The early basic architectures popularized by AlexNet [41] loosely follow a pattern of alternating between convolutional layers (Conv Layer) and pooling layers (Pool Layer). The intention is to \u201clearn\u201d features from input layers via convolutional layers and reduce the spatial complexity via pooling layers. Subsequent iterations of these operations distil a set of features that are enrolled into a fully connected (FC) layer which are computed to output classes.Fig.\u00a02Simple CNN structure with fully connected layers\n          In more modern architectures such as MobileNetV2 [42], FC layers are largely outdated in favour of 1\u2009\u00d7\u20091 convolutions. More performant patterns have also been developed such as residual layers which utilize skip connections introduced in ResNet50 [43].\n        \n        \n          Five DCNN-based classifiers for brain cancer survival rate classification (Fig.\u00a01g)\n          In order to classify different classes of survival rates based on different sizes of patches, we have considered the most popular DCNN classifiers in image recognition task including VGG19 [44], GoogleNet [45], ResNet50 [43], InceptionV3 [46] and MobileNetV2 [42]. We compared all the results derived from each of these models, and the best-performing model was then used as the engine for DeepSurvNet.\n          \n            VGG19\n            In 2014, Visual Geometry Group (VGG) in the Oxford University presented A DCNN classifier model named VGG [44] in the ILSVRC [47] challenge and won the image classification tasks using the VGG model. There are several architectures of VGG with different layers, two of which are very popular. The first one is a 16-layer (VGG16), and the other is a 19-layer (VGG19). We use VGG19 as a classifier for survival rate classification task in this study.\n          \n          \n            GoogleNet\n            In 2014, Szegedy et al. [45] from Google introduced a new conception, namely, Inception, in their article and called their model GoogleNet. In this 22-layer deep network, they have applied filters with different sizes 1\u2009\u00d7\u20091, 3\u2009\u00d7\u20093 and 5\u2009\u00d7\u20095 in the Inception modules. The aim of using such multiple convolutions in the Inception modules would be to feature extraction in different levels. After stacking the outputs of these filters along the channels, they are ready for further layers.\n          \n          \n            ResNet50\n            In 2015, He et al. from Microsoft introduced the ResNet architecture and demonstrated that using the residual modules, we can train very deep convolutional networks with standard stochastic gradient descent (SGD) method [43]. Among all different kinds of ResNet models, the ResNet50 is very popular since it has simpler structure than the other forms, a reason why we use it in this study.\n          \n          \n            InceptionV3\n            As mentioned earlier, GoogleNet introduced the Inception architecture or Inception V1. Afterwards, Inception module was purified in various ways and other architectures are introduced by Google as Inception vN where N is the Inception version. The Inception V3 [46] architecture adds new features to the inception module to increase the accuracy of the ILSVRC classification task.\n          \n          \n            MobileNetV2\n            Another successful approach of DCNN-based classifiers is MobileNetV2 [42] introduced by Sandler et al. from Google in 2018. Although MobileNetV2 is a new idea elicited from MobileNetV1 [48], i.e. using efficient building blocks through depth wise separable convolution, there are two new characteristics to the V2 architecture. The first feature is linear bottlenecks between the layers, and the second is shortcut connections between the bottlenecks. Since their classifier has good functionality on benchmarks like ILSVRC, we have included it as a survival rate classifier for this study.\n          \n          \n            DeepSurvNet classifier model (Fig.\u00a01h)\n            After the utilization of five classifiers introduced in the previous part on the different patch sizes, the best classifier model of survival rate is selected. It should be noted since we have five classifiers and three different sizes of patches, and the number of models applied was 15 in total. The best classifier with the highest accuracy and the lowest loss among all the 15 classifiers is called DeepSurvNet.\nDatasets used for training, testing and validation of deep learning classifiers (Fig.\u00a01a)\n          We considered two different datasets for the classification of survival rates in patients who suffered from different types of brain cancer including glioblastoma multiform, mixed glioma, oligodendroglioma and astrocytoma. The first dataset is derived from 490 brain cancer patients and is publicly available from TCGA [39] and was used to train and test all the classifier models of survival rates. It is important to mention that within this dataset, slides \u2013 and therefore WSI \u2013 for each patient contain several tissue sections of the same biopsy, and all of these were used to train and test the classifiers. The second dataset was derived from 9 glioblastoma patients who underwent surgical tumour resection within the South Australian public hospital system. Tumour biopsy specimens were accessed from archival material stored at SA Pathology (the state pathology service), and survival time was calculated based on electronic medical records. Formalin-fixed paraffin-embedded biopsy tissues were sectioned and stained with H&E according to standard protocols at SA Pathology and imaged at 0.5-\u03bcm/pixel resolution using a Zeiss AxioImager.M2 microscope equipped with an EC Plan-Neofluar 40x/0.75\u00a0M27 Objective and an AxioCam Mrc camera. We used this dataset for an independent test and to monitor the efficiency of our model (i.e. this data was not used for training of the model, for which only TCGA datasets were used).\nPatients\u2019 database creation: removing outliers and extraction of tumour regions of interest (ROIs) from WSIs (Fig. 1b)\n          937 WSIs from 490 brain cancer patients were downloaded from TCGA. These were visually explored, and those WSIs that are useless for further analysis because they are corrupted, present marker annotations that cannot be removed, are of low-resolution or lack of clinical information (time of decease after diagnosis) were removed, which left 654 WSI from 445 cases available for further analysis. Guided by the pathologist, we further inspect the data for optimum extraction of several tumour ROIs from each WSI. The total number of extracted ROIs was 849 from the 445 cases. We used this result to create a curated database containing all the patients\u2019 clinical output information including the patients\u2019 ID, mutated genes, and time between brain cancer diagnosis and disease. This database is directly related to all the extracted ROIs used in our work and is available from the authors upon request.\nDefinition of different classes for survival (Fig. 1c)\n          For classification, we have considered 4 classes. These classes are related to the patients\u2019 history of their time between brain cancer diagnosis to death which was extracted from patients clinical history available from TCGA. Thus, in classes I, II, III and IV, there are respectively 217 ROIs (related to patients with survival time after diagnosis between 0 and 6\u00a0months), 210 ROIs (related to patients with survival time after diagnosis between 6 and12\u00a0months), 277 ROIs (related to patients with survival time after diagnosis between 12 and 24\u00a0months) and 145 ROIs (related to patients with survival time after diagnosis greater than 24\u00a0months). Thus, the number of classes and ROIs in each one is sufficiently large for training the DCNN classifiers which are known to be extremely data hungry throughout the training phase [40].\nPatch extraction from ROIs and patch standardization (Fig. 1d)\n          ROIs allocated to each class are large in size, and processing them directly is computationally demanding. Thus, for training and testing purposes, we have extracted ROI subregions or \u201cpatches\u201d of different sizes 256\u2009\u00d7\u2009256 (218,760 patches), 512\u2009\u00d7\u2009512 (38,963 patches) and 1024\u2009\u00d7\u20091024 (8657 patches) and compared them to know which can detect more features from the ROIs. For supervised machine learning tasks (e.g. classification), each patch is allocated to a class with a specific label, which results in 4 labels as outputs, and each label is related to each class. Table 1 shows a summary of the number of extracted patches with different sizes for each class.Table 1Patch extraction from ROIs for each classNo. of patientsNo. of ROIsNo. of patches (256\u2009\u00d7\u2009256)No. of patches (512\u2009\u00d7\u2009512)No. of patches (1024\u2009\u00d7\u20091024)Class I9521749,70587781921Class II9621053,42894802099Class III13327774,32613,2873004Class IV12114541,30174181633Total445849218,76038,9638657\n          Finally, as TCGA derived images present variable levels of colour intensities, we standardize their intensities by applying the following formula to each pixel:1\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ {P}^{\\hbox{'}}=\\frac{P-\\mu }{\\sigma } $$\\end{document}P'=P\u2212\u03bc\u03c3where P\u2032 and P are standardized and original patches, respectively. Also, \u03bc\u00a0and \u03c3 are the average and standard deviation of all values in the original image patch.\nTraining, validating and testing datasets and DCNN-based classifiers (Fig. 1e, f)\n          For each specific patch size extracted from TCGA dataset, we have divided all the patches into three different cohorts including training (80%), validating (18%) and testing (2%). An example of an early CNN structure can be seen in Fig.\u00a02. The early basic architectures popularized by AlexNet [41] loosely follow a pattern of alternating between convolutional layers (Conv Layer) and pooling layers (Pool Layer). The intention is to \u201clearn\u201d features from input layers via convolutional layers and reduce the spatial complexity via pooling layers. Subsequent iterations of these operations distil a set of features that are enrolled into a fully connected (FC) layer which are computed to output classes.Fig.\u00a02Simple CNN structure with fully connected layers\n          In more modern architectures such as MobileNetV2 [42], FC layers are largely outdated in favour of 1\u2009\u00d7\u20091 convolutions. More performant patterns have also been developed such as residual layers which utilize skip connections introduced in ResNet50 [43].\nFive DCNN-based classifiers for brain cancer survival rate classification (Fig.\u00a01g)\n          In order to classify different classes of survival rates based on different sizes of patches, we have considered the most popular DCNN classifiers in image recognition task including VGG19 [44], GoogleNet [45], ResNet50 [43], InceptionV3 [46] and MobileNetV2 [42]. We compared all the results derived from each of these models, and the best-performing model was then used as the engine for DeepSurvNet.\n          \n            VGG19\n            In 2014, Visual Geometry Group (VGG) in the Oxford University presented A DCNN classifier model named VGG [44] in the ILSVRC [47] challenge and won the image classification tasks using the VGG model. There are several architectures of VGG with different layers, two of which are very popular. The first one is a 16-layer (VGG16), and the other is a 19-layer (VGG19). We use VGG19 as a classifier for survival rate classification task in this study.\n          \n          \n            GoogleNet\n            In 2014, Szegedy et al. [45] from Google introduced a new conception, namely, Inception, in their article and called their model GoogleNet. In this 22-layer deep network, they have applied filters with different sizes 1\u2009\u00d7\u20091, 3\u2009\u00d7\u20093 and 5\u2009\u00d7\u20095 in the Inception modules. The aim of using such multiple convolutions in the Inception modules would be to feature extraction in different levels. After stacking the outputs of these filters along the channels, they are ready for further layers.\n          \n          \n            ResNet50\n            In 2015, He et al. from Microsoft introduced the ResNet architecture and demonstrated that using the residual modules, we can train very deep convolutional networks with standard stochastic gradient descent (SGD) method [43]. Among all different kinds of ResNet models, the ResNet50 is very popular since it has simpler structure than the other forms, a reason why we use it in this study.\n          \n          \n            InceptionV3\n            As mentioned earlier, GoogleNet introduced the Inception architecture or Inception V1. Afterwards, Inception module was purified in various ways and other architectures are introduced by Google as Inception vN where N is the Inception version. The Inception V3 [46] architecture adds new features to the inception module to increase the accuracy of the ILSVRC classification task.\n          \n          \n            MobileNetV2\n            Another successful approach of DCNN-based classifiers is MobileNetV2 [42] introduced by Sandler et al. from Google in 2018. Although MobileNetV2 is a new idea elicited from MobileNetV1 [48], i.e. using efficient building blocks through depth wise separable convolution, there are two new characteristics to the V2 architecture. The first feature is linear bottlenecks between the layers, and the second is shortcut connections between the bottlenecks. Since their classifier has good functionality on benchmarks like ILSVRC, we have included it as a survival rate classifier for this study.\n          \n          \n            DeepSurvNet classifier model (Fig.\u00a01h)\n            After the utilization of five classifiers introduced in the previous part on the different patch sizes, the best classifier model of survival rate is selected. It should be noted since we have five classifiers and three different sizes of patches, and the number of models applied was 15 in total. The best classifier with the highest accuracy and the lowest loss among all the 15 classifiers is called DeepSurvNet.\nVGG19\n            In 2014, Visual Geometry Group (VGG) in the Oxford University presented A DCNN classifier model named VGG [44] in the ILSVRC [47] challenge and won the image classification tasks using the VGG model. There are several architectures of VGG with different layers, two of which are very popular. The first one is a 16-layer (VGG16), and the other is a 19-layer (VGG19). We use VGG19 as a classifier for survival rate classification task in this study.\nGoogleNet\n            In 2014, Szegedy et al. [45] from Google introduced a new conception, namely, Inception, in their article and called their model GoogleNet. In this 22-layer deep network, they have applied filters with different sizes 1\u2009\u00d7\u20091, 3\u2009\u00d7\u20093 and 5\u2009\u00d7\u20095 in the Inception modules. The aim of using such multiple convolutions in the Inception modules would be to feature extraction in different levels. After stacking the outputs of these filters along the channels, they are ready for further layers.\nResNet50\n            In 2015, He et al. from Microsoft introduced the ResNet architecture and demonstrated that using the residual modules, we can train very deep convolutional networks with standard stochastic gradient descent (SGD) method [43]. Among all different kinds of ResNet models, the ResNet50 is very popular since it has simpler structure than the other forms, a reason why we use it in this study.\nInceptionV3\n            As mentioned earlier, GoogleNet introduced the Inception architecture or Inception V1. Afterwards, Inception module was purified in various ways and other architectures are introduced by Google as Inception vN where N is the Inception version. The Inception V3 [46] architecture adds new features to the inception module to increase the accuracy of the ILSVRC classification task.\nMobileNetV2\n            Another successful approach of DCNN-based classifiers is MobileNetV2 [42] introduced by Sandler et al. from Google in 2018. Although MobileNetV2 is a new idea elicited from MobileNetV1 [48], i.e. using efficient building blocks through depth wise separable convolution, there are two new characteristics to the V2 architecture. The first feature is linear bottlenecks between the layers, and the second is shortcut connections between the bottlenecks. Since their classifier has good functionality on benchmarks like ILSVRC, we have included it as a survival rate classifier for this study.\nDeepSurvNet classifier model (Fig.\u00a01h)\n            After the utilization of five classifiers introduced in the previous part on the different patch sizes, the best classifier model of survival rate is selected. It should be noted since we have five classifiers and three different sizes of patches, and the number of models applied was 15 in total. The best classifier with the highest accuracy and the lowest loss among all the 15 classifiers is called DeepSurvNet.\nEvaluation criteria\n        Several metrics like confusion matrix [49]; the combination of precision, recall and F-score [50]; and the area under the ROC curve (AUC) [51] were used for performance evaluation of our classifiers.\n        \n          Confusion matrix\n          The confusion matrix summarizes a classifier success in the prediction of examples belonging to different classes based on true positives (TP), true negatives (TN), false negatives (FN) and false positive (FP) values. This table is used to calculate the other performance metrics, i.e. precision, recall and Matthews correlation coefficient (MCC).\n        \n        \n          Precision, recall and F-score\n          Precision and recall are defined as follows:2\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\Pr ecision=\\frac{TP}{TP+ FP} $$\\end{document}Precision=TPTP+FP3\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\operatorname{Re} call=\\frac{TP}{TP+ FN} $$\\end{document}Recall=TPTP+FN\n          And F-score is the harmonic average of the precision and recall:4\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ F- Score=\\frac{2\\left(\\Pr ecision\\times \\operatorname{Re} call\\right)}{\\left(\\Pr ecision+\\operatorname{Re} call\\right)} $$\\end{document}F\u2212Score=2Precision\u00d7RecallPrecision+Recall\n          The MCC value is a correlation coefficient between the targets and predicted classifications:5\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ MCC=\\left( TP\\times TN\\right)-\\left( FP\\times FN\\right)/\\sqrt{\\left( TP+ FP\\right)\\left( TP+ FN\\right)\\left( TN+ FP\\right)\\left( TN+ FN\\right)} $$\\end{document}MCC=TP\u00d7TN\u2212FP\u00d7FN/TP+FPTP+FNTN+FPTN+FN\n          Precision, recall and F-score reach their best values at 1 and worst at 0. MCC of +\u20091 indicates a perfect prediction and \u2212\u20091 represents completely disagreement between target and prediction.\n        \n        \n          Area under the curve (AUC) and receiver operating characteristics (ROC)\n          ROC curves combine the true positive rate (TPR or sensitivity) and false positive rate (FPR or 1-specificity) to illustrate the classification performance. These two metrics are defined as follows:6\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ TPR=\\frac{TP}{TP+ FN} $$\\end{document}TPR=TPTP+FN7\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ FPR=\\frac{FP}{FP+ TN} $$\\end{document}FPR=FPFP+TN\n          A perfect classifier would achieve higher AUC, and AUC of 1 means the best classification.\nConfusion matrix\n          The confusion matrix summarizes a classifier success in the prediction of examples belonging to different classes based on true positives (TP), true negatives (TN), false negatives (FN) and false positive (FP) values. This table is used to calculate the other performance metrics, i.e. precision, recall and Matthews correlation coefficient (MCC).\nPrecision, recall and F-score\n          Precision and recall are defined as follows:2\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\Pr ecision=\\frac{TP}{TP+ FP} $$\\end{document}Precision=TPTP+FP3\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ \\operatorname{Re} call=\\frac{TP}{TP+ FN} $$\\end{document}Recall=TPTP+FN\n          And F-score is the harmonic average of the precision and recall:4\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ F- Score=\\frac{2\\left(\\Pr ecision\\times \\operatorname{Re} call\\right)}{\\left(\\Pr ecision+\\operatorname{Re} call\\right)} $$\\end{document}F\u2212Score=2Precision\u00d7RecallPrecision+Recall\n          The MCC value is a correlation coefficient between the targets and predicted classifications:5\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ MCC=\\left( TP\\times TN\\right)-\\left( FP\\times FN\\right)/\\sqrt{\\left( TP+ FP\\right)\\left( TP+ FN\\right)\\left( TN+ FP\\right)\\left( TN+ FN\\right)} $$\\end{document}MCC=TP\u00d7TN\u2212FP\u00d7FN/TP+FPTP+FNTN+FPTN+FN\n          Precision, recall and F-score reach their best values at 1 and worst at 0. MCC of +\u20091 indicates a perfect prediction and \u2212\u20091 represents completely disagreement between target and prediction.\nArea under the curve (AUC) and receiver operating characteristics (ROC)\n          ROC curves combine the true positive rate (TPR or sensitivity) and false positive rate (FPR or 1-specificity) to illustrate the classification performance. These two metrics are defined as follows:6\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ TPR=\\frac{TP}{TP+ FN} $$\\end{document}TPR=TPTP+FN7\\documentclass[12pt]{minimal}\n\t\t\t\t\\usepackage{amsmath}\n\t\t\t\t\\usepackage{wasysym} \n\t\t\t\t\\usepackage{amsfonts} \n\t\t\t\t\\usepackage{amssymb} \n\t\t\t\t\\usepackage{amsbsy}\n\t\t\t\t\\usepackage{mathrsfs}\n\t\t\t\t\\usepackage{upgreek}\n\t\t\t\t\\setlength{\\oddsidemargin}{-69pt}\n\t\t\t\t\\begin{document}$$ FPR=\\frac{FP}{FP+ TN} $$\\end{document}FPR=FPFP+TN\n          A perfect classifier would achieve higher AUC, and AUC of 1 means the best classification.\nImplementation details\n      In this study, in the preprocessing stage, for WSIs visualization and removing outliers, we have used Aperio ImageScope software. Also, we have initialized our input shapes to 224\u2009\u00d7\u2009224\u2009\u00d7\u20093 channels (224\u2009\u00d7\u2009224\u2009\u00d7\u20093) for all of the classifiers. After several experiences, we found that the best practices for setting parameters and hyperparameters in training stage are 30 epochs with stochastic gradient descent (SGD) optimizer, an initial learning rate of 0.01, the momentum of 0.9, learning rate decay of 0.001 and categorical cross-entropy as loss function. In order to tackle the overfitting problem, we have applied the dropout regularization technique. All the networks were implemented in python with the Keras [52], a high-level neural networks API running on Tensorflow framework [53], and trained using four NVIDIA 1080Ti GPUs.\nResults and discussion\n      \n        Survival rate classifiers comparison\n        Figure 3 shows training accuracy and loss curves in training phase for different patch sizes (256\u2009\u00d7\u2009256, 512\u2009\u00d7\u2009512 and 1024\u2009\u00d7\u20091024) for all survival classifiers (note that all classifiers were applied to the same TCGA training patches). Results using 256\u2009\u00d7\u2009256 patch size show that for all classifiers, this size has improved training accuracy curves (nearly 1) and the lowest training loss curves (nearly 0) when compared to the other patch sizes.Fig.\u00a03a Accuracy curves and b loss curves for five classifiers in training phase. Left, patches 256\u2009\u00d7\u2009256; middle, patches 512\u2009\u00d7\u2009512; and right, patches 1024\u2009\u00d7\u20091024\n        Then, in the testing phase, we evaluate the \u201ctrained classifiers to the corresponding test set (i.e. a set of patch images of different sizes)\u201d. During this phase, we calculated confusion matrix, AUC, and the achieved values for all the evaluator metrics including recall, precision and F-score for the different classifiers (Table 2). We found that using GoogleNet led to the highest level of ordered pair of (i) average precision and (ii) average AUC of 0.65 and 0.86, 0.93 and0.99 and 0.99 and1 for 1024\u2009\u00d7\u20091024, 512\u2009\u00d7\u2009512 and 256\u2009\u00d7\u2009256 patch sizes, respectively. Therefore, DeepSurvNet classifier is powered by trained GoogleNet on 256\u2009\u00d7\u2009256 histopathological patches, given the highest average precision obtained under these conditions.Table 2Comparison between different kinds of DCNN classifiers in the testing phaseCNN modelPatch sizeClass no.RecallF-scorePrecisionMCCAvg. PrecisionAvg. MCCAvg. AUCVGG19256\u2009\u00d7\u2009256C10.610.610.610.570.650.620.87C20.570.590.610.64C30.640.680.720.61C40.780.720.660.65512\u2009\u00d7\u2009512C10.120.180.39\u2212\u20090.320.43\u2212\u20090.160.54C20.040.070.75\u2212\u20090.21C30.830.380.25\u2212\u20090.07C40.090.140.32\u2212\u20090.061024\u2009\u00d7\u20091024C10.000.000.00\u2212\u20090.520.42\u2212\u20090.480.56C20.320.360.41\u2212\u20090.52C30.860.420.28\u2212\u20090.43C40.160.281.00\u2212\u20090.43MobileNetV2256\u2009\u00d7\u2009256C10.700.760.840.510.810.540.95C20.820.800.780.54C30.810.910.720.54C40.910.910.910.56512\u2009\u00d7\u2009512C10.580.540.510.10.590.10.82C20.600.550.510.1C30.510.570.650.08C40.630.660.700.111024\u2009\u00d7\u20091024C10.000.000.00\u2212\u20090.520.31\u2212\u20090.430.53C20.660.400.28\u2212\u20090.37C30.500.400.33\u2212\u20090.37C40.100.170.62\u2212\u20090.47ResNet50256\u2009\u00d7\u2009256C10.820.850.870.630.850.640.96C20.810.860.900.63C30.820.800.770.63C40.960.910.870.66512\u2009\u00d7\u2009512C10.650.640.630.300.710.310.90C20.720.680.650.32C30.670.680.690.31C40.760.810.860.331024\u2009\u00d7\u20091024C10.240.330.55\u2212\u20090.070.600.040.81C20.820.570.440.12C30.500.540.600.04C40.720.770.840.1InceptionV3256\u2009\u00d7\u2009256C10.860.830.820.660.8750.660.97C20.860.870.900.66C30.790.810.850.65C40.950.930.930.66512\u2009\u00d7\u2009512C10.840.780.730.590.830.580.95C20.730.750.780.56C30.770.830.890.57C40.960.940.920.611024\u2009\u00d7\u20091024C10.480.540.62\u2212\u20090.520.63\u2212\u20090.430.82C20.500.620.83\u2212\u20090.37C30.760.580.47\u2212\u20090.37C40.600.590.59\u2212\u20090.47GoogLeNet256\u2009\u00d7\u2009256C10.990.990.980.970.990.971C20.980.980.990.97C30.990.990.990.97C40.990.990.990.96512\u2009\u00d7\u2009512C10.930.920.920.790.930.800.99C20.880.920.950.80C30.940.930.920.83C40.960.940.930.781024\u2009\u00d7\u20091024C10.450.550.690.080.650.130.86C20.570.620.670.13C30.780.630.520.23C40.560.670.820.08\n        Figure 4 shows the application of the 5 classifiers on 256\u2009\u00d7\u2009256 patch size. In this figure, confusion matrix and AUC have been depicted confirming that GoogleNet has the highest true positives and average AUC for four classes in comparison with the other classifiers. Indeed, classification results of 5 classifiers trained on 256\u2009\u00d7\u2009256 patch size for each cross-validation in 3 different testing folds have been shown in Table 3. The results show that the highest average indexes (among all 4 classes) including precision, recall, f1-score and MCC for all the 3 folds again are related to GoogLeNet.Fig.\u00a04Five classifiers output on patches 256\u2009\u00d7\u2009256, confusion matrix in the left side and the area under ROC in right side for a VGG19, b MobileNet V2, c ResNet50, d) Inception V3 and e GoogleNetTable 3Classification results of 5 DCNN classifiers trained on 256\u2009\u00d7\u2009256 patch size for each cross validation in 3 different testing foldsClassification results for 4 classesIndex (avg. on 4 classes)Fold #1Fold #2Fold #3AverageVGG19Recall0.610.830.510.65Precision0.610.840.510.66F1-Score0.610.830.500.65MCC0.170.56\u2212\u20090.050.23MobileNetV2Recall0.860.850.870.86Precision0.850.850.870.86F1-Score0.850.850.870.86MCC0.670.660.680.67ResNet50Recall0.840.860.600.77Precision0.850.860.640.78F1-Score0.840.860.600.58MCC0.650.680.100.36InceptionV3Recall0.870.870.870.87Precision0.860.870.870.87F1-Score0.870.870.870.87MCC0.690.690.700.70GoogLeNetRecall0.990.980.980.98Precision0.980.980.990.98F1-Score0.980.990.990.98MCC0.970.960.970.97\n      \n      \n        DeepSurvNet generalization in unseen (locally derived) dataset\n        Having established a pipeline for accurate prediction for the different classes to which patient\u2019s survival allocate based on pathological images using DeepSurvNet, we then wanted to test the accuracy of the model using a completely unseen data, which is of relevance for those who might also want to apply this pipeline with already available brain cancer histopathological slides. For this, we analysed images of H&E-stained glioblastoma tissue sections collected by SA Pathology from 9 patients undergoing tumour resection in local hospitals. Figure 5 shows the summary of the results. First, H&E histopathological images from each patient (Fig.\u00a05a, b) were analysed in consultation with the clinical pathologist for the distinction of those regions that correspond to the tumour. These ROIs were used to extract 20 patches per patient for \u201cpatch classification\u201d using the TCGA-trained DeepSurvNet classifier (Fig.\u00a05b). From the different patients, we observe that the frequency of class prediction per patient was highly biased towards a single class as would be expected since patches were derived from the same pathological sample (Fig.\u00a05c, d). Remarkably, this single class perfectly matches the real class to which patients belong (9 of 9 patients, Fig.\u00a05d).Fig.\u00a05DeepSurvNet test on 9 glioblastoma patient samples (a) for which 20 patches were extracted from each sample (b). Patch classification for each patch in each sample using DeepServNet (c). d Summary of results and comparison of actual class (blue square) in patients with the corresponding predictions (3rd column, % of predicted correct classes based on the analysis of 20 patches; 4th column, class with the highest number of predicted patches, green square)\n        We then performed precision analysis based on (i) the analysis of 20\u2009\u00d7\u20099\u2009=\u2009180 patches derived from these samples (i.e. without making a distinction to which patient they belong. Confusion matrix results (Fig.\u00a06) show that the application of DeepSurvNet to this unseen dataset led to an average global precision of 80%. This precision was higher for patches belonging to class I and class II (80% and 86%, respectively) and lower for those patches belonging to class III and class IV (77% and 74%, for which morphological and genetic features are much more heterogeneous, see below).Fig.\u00a06a Confusion matrix for total patches, b the area under ROC curve for all patches in four classes and c DeepSurvNet outputs summary for all patches\n      \n      \n        Gene mutation frequency within survival classes\n        We then sought for better understanding of the underlying genetic differences associated with each class. For this, we analysed the distribution of frequency for mutated genes in the different survival classes using data derived from the TCGA database (Fig.\u00a07). First, we found that by pooling all brain cancer data, the most highly mutated genes were PTEN, TTN, TP53EGFR, PLG and MUC 16 (Fig.\u00a07a). We then analysed the frequency of mutations within each class and compared it to the distributions for all patients (Fig.\u00a07b). We found that the distribution of gene mutations in class I mimics better than the one from the whole cohort, this being less obvious for the rest of the classes. This potentially highlights the underlying genetic differences between the classes and their impact on patient survival. To gain further insight into this, we performed a Z-score analysis to test whether there are highly mutated genes associated to each class by identifying those genes whose frequency of mutations is higher than 2 standard deviations of the frequency values for the entire set of genes (Fig.\u00a07c). Interestingly, we found specific genes associated with each class (class I, PTEN; class II, SPTA1; class III, TTN; and class IV, TTN and FLG). Of these, the clinical significance of TTN mutations is limited since high rates of TTN mutations (passenger mutations) are mostly due to large size of this protein and variation of mutation rates across the genome [54]. We were also interested in those mutations that were different between classes, in particular, those features that are different between those patients with short and long survival. For this, we calculated the differences in frequency of mutations of each class with respect to the frequency of mutations in class IV, to discover which genes are more often aberrant in those short survival cancers (compared to those with long survival) (Fig.\u00a07d). In particular, lack of mutations of FLG are associated with class I and class II; this adds to the presence of PTEN and SPTA mutations within these classes to define their signatures. Also, we found that there are no clear differences between long survival classes (III and IV), which highlight short survival cancers, like glioblastoma (Supplementary Table 1), are intrinsically different from those long survival cancers and correlate with our precision analysis in SA Pathology samples on which accuracy is reduced for these classes.Fig.\u00a07Brain cancer\u2013mutated genes expression analysis in the four survival classes. a 20 most effective mutated genes in brain cancer, b number of patients related to each mutated genes in each class, c recognition of the most important gene in each class based on Z-score analysis and d differences in frequency of mutations of each class with respect the frequency of mutations in class IV\n        From the above analysis of frequency of mutated genes in brain cancer, it is worth to highlight the identification of flg mutations in class III and IV patients. The National Cancer Institute (NCI) is currently developing a new genomics database, the Exceptional Responders Initiative (ERI), to identify molecular features of patients who have a unique response to treatments and therefore exhibit long survival rates (i.e. \u201cexceptional responders\u201d). FLG is a high-affinity receptor of basic fibroblast growth factor (bFGF), and a recent report by Wipfler et al. has shown that FLG has a significantly different distribution of patients affected by somatic nonsynonymous mutations. Of these, 25% of exceptional responders had one mutation each in FLG [13]. In contrast, overexpression of FLG is associated with low immune cell infiltration and short survival rates in melanoma and ovarian cancer [55], while the loss of function mutations in FLG is associated with lower cancer risk in several cancers [56]. This suggests that FLG mutations in patients with long survival rates confer a prognostic benefit possibly related to immune cell infiltration within the glioma tumour cellular microenvironment, a feature that can be detected in H&E-stained tissue sections by our image-based classifier. Similarly, SPTA1 (Spectrin, alpha, erythrocytic 1) mutations can led to alterations in H&E-stained tissue features due to its involvement in the regulation of cortical actin organization and cell shape as it has been shown in other cancers [57], although its role in GBM has not been investigated yet. Similar conclusions in relation to the tumour microenvironment and the differential expression of extracellular matrix (ECM) proteins (and therefore outside-in cell-ECM signalling) have been identified to be highly and inversely correlated to patient\u2019s survival rates [58]. Thus, these observations suggest that differences in the cellular and noncellular microenvironment [10] and the way that cancer cells sense it through adhesion receptors and modulation of the actin cytoskeleton (i.e. EMT [59] and invasion [60]) are reflected as key biological features that could be captured by our image-based survival rate classifier.\nSurvival rate classifiers comparison\n        Figure 3 shows training accuracy and loss curves in training phase for different patch sizes (256\u2009\u00d7\u2009256, 512\u2009\u00d7\u2009512 and 1024\u2009\u00d7\u20091024) for all survival classifiers (note that all classifiers were applied to the same TCGA training patches). Results using 256\u2009\u00d7\u2009256 patch size show that for all classifiers, this size has improved training accuracy curves (nearly 1) and the lowest training loss curves (nearly 0) when compared to the other patch sizes.Fig.\u00a03a Accuracy curves and b loss curves for five classifiers in training phase. Left, patches 256\u2009\u00d7\u2009256; middle, patches 512\u2009\u00d7\u2009512; and right, patches 1024\u2009\u00d7\u20091024\n        Then, in the testing phase, we evaluate the \u201ctrained classifiers to the corresponding test set (i.e. a set of patch images of different sizes)\u201d. During this phase, we calculated confusion matrix, AUC, and the achieved values for all the evaluator metrics including recall, precision and F-score for the different classifiers (Table 2). We found that using GoogleNet led to the highest level of ordered pair of (i) average precision and (ii) average AUC of 0.65 and 0.86, 0.93 and0.99 and 0.99 and1 for 1024\u2009\u00d7\u20091024, 512\u2009\u00d7\u2009512 and 256\u2009\u00d7\u2009256 patch sizes, respectively. Therefore, DeepSurvNet classifier is powered by trained GoogleNet on 256\u2009\u00d7\u2009256 histopathological patches, given the highest average precision obtained under these conditions.Table 2Comparison between different kinds of DCNN classifiers in the testing phaseCNN modelPatch sizeClass no.RecallF-scorePrecisionMCCAvg. PrecisionAvg. MCCAvg. AUCVGG19256\u2009\u00d7\u2009256C10.610.610.610.570.650.620.87C20.570.590.610.64C30.640.680.720.61C40.780.720.660.65512\u2009\u00d7\u2009512C10.120.180.39\u2212\u20090.320.43\u2212\u20090.160.54C20.040.070.75\u2212\u20090.21C30.830.380.25\u2212\u20090.07C40.090.140.32\u2212\u20090.061024\u2009\u00d7\u20091024C10.000.000.00\u2212\u20090.520.42\u2212\u20090.480.56C20.320.360.41\u2212\u20090.52C30.860.420.28\u2212\u20090.43C40.160.281.00\u2212\u20090.43MobileNetV2256\u2009\u00d7\u2009256C10.700.760.840.510.810.540.95C20.820.800.780.54C30.810.910.720.54C40.910.910.910.56512\u2009\u00d7\u2009512C10.580.540.510.10.590.10.82C20.600.550.510.1C30.510.570.650.08C40.630.660.700.111024\u2009\u00d7\u20091024C10.000.000.00\u2212\u20090.520.31\u2212\u20090.430.53C20.660.400.28\u2212\u20090.37C30.500.400.33\u2212\u20090.37C40.100.170.62\u2212\u20090.47ResNet50256\u2009\u00d7\u2009256C10.820.850.870.630.850.640.96C20.810.860.900.63C30.820.800.770.63C40.960.910.870.66512\u2009\u00d7\u2009512C10.650.640.630.300.710.310.90C20.720.680.650.32C30.670.680.690.31C40.760.810.860.331024\u2009\u00d7\u20091024C10.240.330.55\u2212\u20090.070.600.040.81C20.820.570.440.12C30.500.540.600.04C40.720.770.840.1InceptionV3256\u2009\u00d7\u2009256C10.860.830.820.660.8750.660.97C20.860.870.900.66C30.790.810.850.65C40.950.930.930.66512\u2009\u00d7\u2009512C10.840.780.730.590.830.580.95C20.730.750.780.56C30.770.830.890.57C40.960.940.920.611024\u2009\u00d7\u20091024C10.480.540.62\u2212\u20090.520.63\u2212\u20090.430.82C20.500.620.83\u2212\u20090.37C30.760.580.47\u2212\u20090.37C40.600.590.59\u2212\u20090.47GoogLeNet256\u2009\u00d7\u2009256C10.990.990.980.970.990.971C20.980.980.990.97C30.990.990.990.97C40.990.990.990.96512\u2009\u00d7\u2009512C10.930.920.920.790.930.800.99C20.880.920.950.80C30.940.930.920.83C40.960.940.930.781024\u2009\u00d7\u20091024C10.450.550.690.080.650.130.86C20.570.620.670.13C30.780.630.520.23C40.560.670.820.08\n        Figure 4 shows the application of the 5 classifiers on 256\u2009\u00d7\u2009256 patch size. In this figure, confusion matrix and AUC have been depicted confirming that GoogleNet has the highest true positives and average AUC for four classes in comparison with the other classifiers. Indeed, classification results of 5 classifiers trained on 256\u2009\u00d7\u2009256 patch size for each cross-validation in 3 different testing folds have been shown in Table 3. The results show that the highest average indexes (among all 4 classes) including precision, recall, f1-score and MCC for all the 3 folds again are related to GoogLeNet.Fig.\u00a04Five classifiers output on patches 256\u2009\u00d7\u2009256, confusion matrix in the left side and the area under ROC in right side for a VGG19, b MobileNet V2, c ResNet50, d) Inception V3 and e GoogleNetTable 3Classification results of 5 DCNN classifiers trained on 256\u2009\u00d7\u2009256 patch size for each cross validation in 3 different testing foldsClassification results for 4 classesIndex (avg. on 4 classes)Fold #1Fold #2Fold #3AverageVGG19Recall0.610.830.510.65Precision0.610.840.510.66F1-Score0.610.830.500.65MCC0.170.56\u2212\u20090.050.23MobileNetV2Recall0.860.850.870.86Precision0.850.850.870.86F1-Score0.850.850.870.86MCC0.670.660.680.67ResNet50Recall0.840.860.600.77Precision0.850.860.640.78F1-Score0.840.860.600.58MCC0.650.680.100.36InceptionV3Recall0.870.870.870.87Precision0.860.870.870.87F1-Score0.870.870.870.87MCC0.690.690.700.70GoogLeNetRecall0.990.980.980.98Precision0.980.980.990.98F1-Score0.980.990.990.98MCC0.970.960.970.97\nDeepSurvNet generalization in unseen (locally derived) dataset\n        Having established a pipeline for accurate prediction for the different classes to which patient\u2019s survival allocate based on pathological images using DeepSurvNet, we then wanted to test the accuracy of the model using a completely unseen data, which is of relevance for those who might also want to apply this pipeline with already available brain cancer histopathological slides. For this, we analysed images of H&E-stained glioblastoma tissue sections collected by SA Pathology from 9 patients undergoing tumour resection in local hospitals. Figure 5 shows the summary of the results. First, H&E histopathological images from each patient (Fig.\u00a05a, b) were analysed in consultation with the clinical pathologist for the distinction of those regions that correspond to the tumour. These ROIs were used to extract 20 patches per patient for \u201cpatch classification\u201d using the TCGA-trained DeepSurvNet classifier (Fig.\u00a05b). From the different patients, we observe that the frequency of class prediction per patient was highly biased towards a single class as would be expected since patches were derived from the same pathological sample (Fig.\u00a05c, d). Remarkably, this single class perfectly matches the real class to which patients belong (9 of 9 patients, Fig.\u00a05d).Fig.\u00a05DeepSurvNet test on 9 glioblastoma patient samples (a) for which 20 patches were extracted from each sample (b). Patch classification for each patch in each sample using DeepServNet (c). d Summary of results and comparison of actual class (blue square) in patients with the corresponding predictions (3rd column, % of predicted correct classes based on the analysis of 20 patches; 4th column, class with the highest number of predicted patches, green square)\n        We then performed precision analysis based on (i) the analysis of 20\u2009\u00d7\u20099\u2009=\u2009180 patches derived from these samples (i.e. without making a distinction to which patient they belong. Confusion matrix results (Fig.\u00a06) show that the application of DeepSurvNet to this unseen dataset led to an average global precision of 80%. This precision was higher for patches belonging to class I and class II (80% and 86%, respectively) and lower for those patches belonging to class III and class IV (77% and 74%, for which morphological and genetic features are much more heterogeneous, see below).Fig.\u00a06a Confusion matrix for total patches, b the area under ROC curve for all patches in four classes and c DeepSurvNet outputs summary for all patches\nGene mutation frequency within survival classes\n        We then sought for better understanding of the underlying genetic differences associated with each class. For this, we analysed the distribution of frequency for mutated genes in the different survival classes using data derived from the TCGA database (Fig.\u00a07). First, we found that by pooling all brain cancer data, the most highly mutated genes were PTEN, TTN, TP53EGFR, PLG and MUC 16 (Fig.\u00a07a). We then analysed the frequency of mutations within each class and compared it to the distributions for all patients (Fig.\u00a07b). We found that the distribution of gene mutations in class I mimics better than the one from the whole cohort, this being less obvious for the rest of the classes. This potentially highlights the underlying genetic differences between the classes and their impact on patient survival. To gain further insight into this, we performed a Z-score analysis to test whether there are highly mutated genes associated to each class by identifying those genes whose frequency of mutations is higher than 2 standard deviations of the frequency values for the entire set of genes (Fig.\u00a07c). Interestingly, we found specific genes associated with each class (class I, PTEN; class II, SPTA1; class III, TTN; and class IV, TTN and FLG). Of these, the clinical significance of TTN mutations is limited since high rates of TTN mutations (passenger mutations) are mostly due to large size of this protein and variation of mutation rates across the genome [54]. We were also interested in those mutations that were different between classes, in particular, those features that are different between those patients with short and long survival. For this, we calculated the differences in frequency of mutations of each class with respect to the frequency of mutations in class IV, to discover which genes are more often aberrant in those short survival cancers (compared to those with long survival) (Fig.\u00a07d). In particular, lack of mutations of FLG are associated with class I and class II; this adds to the presence of PTEN and SPTA mutations within these classes to define their signatures. Also, we found that there are no clear differences between long survival classes (III and IV), which highlight short survival cancers, like glioblastoma (Supplementary Table 1), are intrinsically different from those long survival cancers and correlate with our precision analysis in SA Pathology samples on which accuracy is reduced for these classes.Fig.\u00a07Brain cancer\u2013mutated genes expression analysis in the four survival classes. a 20 most effective mutated genes in brain cancer, b number of patients related to each mutated genes in each class, c recognition of the most important gene in each class based on Z-score analysis and d differences in frequency of mutations of each class with respect the frequency of mutations in class IV\n        From the above analysis of frequency of mutated genes in brain cancer, it is worth to highlight the identification of flg mutations in class III and IV patients. The National Cancer Institute (NCI) is currently developing a new genomics database, the Exceptional Responders Initiative (ERI), to identify molecular features of patients who have a unique response to treatments and therefore exhibit long survival rates (i.e. \u201cexceptional responders\u201d). FLG is a high-affinity receptor of basic fibroblast growth factor (bFGF), and a recent report by Wipfler et al. has shown that FLG has a significantly different distribution of patients affected by somatic nonsynonymous mutations. Of these, 25% of exceptional responders had one mutation each in FLG [13]. In contrast, overexpression of FLG is associated with low immune cell infiltration and short survival rates in melanoma and ovarian cancer [55], while the loss of function mutations in FLG is associated with lower cancer risk in several cancers [56]. This suggests that FLG mutations in patients with long survival rates confer a prognostic benefit possibly related to immune cell infiltration within the glioma tumour cellular microenvironment, a feature that can be detected in H&E-stained tissue sections by our image-based classifier. Similarly, SPTA1 (Spectrin, alpha, erythrocytic 1) mutations can led to alterations in H&E-stained tissue features due to its involvement in the regulation of cortical actin organization and cell shape as it has been shown in other cancers [57], although its role in GBM has not been investigated yet. Similar conclusions in relation to the tumour microenvironment and the differential expression of extracellular matrix (ECM) proteins (and therefore outside-in cell-ECM signalling) have been identified to be highly and inversely correlated to patient\u2019s survival rates [58]. Thus, these observations suggest that differences in the cellular and noncellular microenvironment [10] and the way that cancer cells sense it through adhesion receptors and modulation of the actin cytoskeleton (i.e. EMT [59] and invasion [60]) are reflected as key biological features that could be captured by our image-based survival rate classifier.\nConclusion\n      We tested the possibility of using H&E-stained brain cancer histopathological images as input data for patients\u2019 survival classification using DCNN. In doing so, we compared the performance of DCNN algorithms using two independent datasets: the first publicly available in TCGA and the other generated by ourselves from samples collected in Adelaide. DeepSurvNet is GoogleNet classifier trained on 200,000 training samples using TCGA brain cancer dataset. Patches classification accuracy using DeepSurvNet was of 99% in the testing phase. Moreover, we found that our model DeepSurvNet classified >\u200950% patients\u2019 patches class with >\u200990% accuracy and more than >\u200975% patients\u2019 patches with 75% accuracy and 100% accuracy when considered the single patient classification based on the total patches per patient. Moreover, since for each patient the model could classify >\u200950% of patches in a correct class, we can also say that the classifier accuracy for 9 patients is 100%.\n      The analysis of frequency of mutations within these survival classes shows differences between these in terms of frequency and type of genes associated to patients with different survival rates, supporting the idea of a different genetic fingerprint associated to patient survival. This highlight that differences between short and long survival tumours and the underlying genetic characterisitcs could be useful not only in scheduling of treatments but also for the identification of new targets for glioblastoma. Thus, we conclude that DeepSurvNet constitute a new AI tool to assess the malignancy of brain cancer, which could help in the evaluation of patient treatment.\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC7188709/\nhttps://doi.org/10.1007/s11517-020-02147-3",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7188709/",
    "doi": "https://doi.org/10.1007/s11517-020-02147-3",
    "citation_count": 14,
    "references": {
        "10900832": "Computational pathology: A survey review and the way forward",
        "10894864": "A multi-class brain tumor grading system based on histopathological images using a hybrid YOLO and RESNET networks",
        "10550689": "The first case of glioma detected by an artificial intelligence algorithm running on real-time data in neurosurgery: illustrative case",
        "10451210": "Recent Advancements in Deep Learning Using Whole Slide Imaging for Cancer Prognosis",
        "9817940": "Squeeze-MNet: Precise Skin Cancer Detection Model for Low Computing IoT Devices Using Transfer Learning",
        "9601633": "Integrative Histology-Genomic Analysis Predicts Hepatocellular Carcinoma Prognosis Using Deep Learning",
        "9497964": "Predicting Survival in Patients with Brain Tumors: Current State-of-the-Art of AI Methods Applied to MRI",
        "9324951": "Developing image analysis methods for digital pathology",
        "8477474": "Deep learning in cancer diagnosis, prognosis and treatment selection",
        "8329064": "A deep convolutional neural network for segmentation of whole-slide pathology images identifies novel tumour cell-perivascular niche interactions that are associated with poor survival in glioblastoma",
        "8178077": "Image-driven classification of functioning and nonfunctioning pituitary adenoma by deep convolutional neural networks",
        "8122817": "Towards the Interpretability of Machine Learning Predictions for Medical Applications Targeting Personalised Therapies: A Cancer Case Survey",
        "7884739": "Deep learning in cancer pathology: a new generation of clinical biomarkers",
        "7711876": "The Application of Deep Convolutional Neural Networks to Brain Cancer Images: A Survey"
    },
    "journal": "Medical & Biological Engineering & Computing",
    "topics": [
        "brain, histopathological, rate, cancer",
        "survival, images, classification, deepsurvnet",
        "brain, histopathological, rate, convolutional"
    ]
}